package lang.object.equals;

public class UserV1 {
    // equals()
    // 1. 동일성과 동등성
    // Object는 동등성 비교를 위한 equals() 메서드를 제공한다.

    // 자바는 두 객체가 같다라는 표현을 2가지로 분리해서 제공한다.
    // 동일성(Identity) :  == 연산자를 사용해서 두 객체의 참조가 동일한 객체를 가리키고 있는지 확인
    // 동등성(Equality) : equals() 메서드를 사용하여 두 객체가 논리적으로 동등한지 확인

    // 단어 정리
    // "동일"은 완전히 같음(100퍼센트)을 의미, "동등"은 같은 가치나 수준을 의미(완전히 같지 않지만 비슷할 수 있음)하지만 그 형태나 외관 등이 완전히 같지 않을 수 있다.
    // 즉, 동일성은 물리적으로 같은 메모리에 있는 객체 인스턴스인지 참조값을 확인하는 것이고, 동등성은 논리적으로 같은지 확인하는 것이다.
    // 동일성은 자바 머신 기준이고 메모리의 참조가 기준이므로 물리적이고, 동등성은 보통 사람이 생각하는 논리적인 기준에 맞추어 비교한다.

    // User a = new User("id-100") // 참조 x001
    // User b = new User("id-100") // 참조 x002
    // 이런 상황에서 동일성은 같지 않고, 동등성은 같다.
    // 물리적으로 다른 메모리에 있는 객체이지만 회원 번호는 같기 때문이다.

    // 문자열도 마찬가지이다.
    // String str1 = "hello";
    // String str2 = "hello";
    // 이 때도 각각 다른 메모리에 존재하지만 논리적으로는 "hello"라는 같은 문자열이다.

    private String id;

    public UserV1(String id) {
        this.id = id;
    }
}
